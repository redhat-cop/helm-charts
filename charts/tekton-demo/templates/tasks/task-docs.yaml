apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: docs
  namespace: {{ .Values.application.environments.cicd }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  workspaces:
    - name: source
  params:
    - name: ref
      description: Git reference
    - name: repourl
      description: repository url from github payload
    - name: repofullname
      description: full name user-org/reponame from github
    - name: revision
      description: commit head unique id
      type: string
    - name: revision-type
      description: revision type
      type: string
    - name: revision-name
      description: revision name
      type: string
    - name: author
      description: revision commit author username
    - name: VERSION
      description: The version of nodejs
      default: {{ .Values.application.runtime }}
      type: string
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "false"
      type: string

  results:
  - name: image
    description: url of the image just built
  - name: digest
    description: digest of the image just built

  steps:

    - name: image-build
      image: registry.redhat.io/rhel8/buildah@sha256:aabe482acad8da070526d705383cd001e3f182814fa2ff4ea195c9b89cb4eb1b
      workingDir: /workspace/source/{{ .Values.pipeline.build.s2i.context }}/docs
      resources: {}
      script: |
        #!/bin/sh
        if [ "$(inputs.params.revision-type)" == "develop" ]; then
          buildah bud --tls-verify=$(inputs.params.TLSVERIFY) --layers -t image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-documentation:$(inputs.params.revision-name) .
        fi
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        # - name: gen-source
        #   mountPath: /gen-source
      securityContext:
        privileged: true

    - name: image-push
      image: registry.redhat.io/rhel8/buildah@sha256:aabe482acad8da070526d705383cd001e3f182814fa2ff4ea195c9b89cb4eb1b
      script: |
        #!/bin/sh
        if [ "$(inputs.params.revision-type)" == "develop" ]; then
          buildah push --tls-verify=$(inputs.params.TLSVERIFY) --digestfile $(workspaces.source.path)/image-digest image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-documentation:$(inputs.params.revision-name) docker://image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-documentation:$(inputs.params.revision-name)
        fi
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      resources: {}
      securityContext:
        privileged: true

    - name: image-digest
      image: registry.redhat.io/rhel8/buildah@sha256:aabe482acad8da070526d705383cd001e3f182814fa2ff4ea195c9b89cb4eb1b
      script: |
        #!/bin/sh
        printf %s "null" >> /tekton/results/digest
        printf %s "null" >> /tekton/results/image
        if [ "$(inputs.params.revision-type)" == "develop" ]; then
          printf %s "image-registry.openshift-image-registry.svc:5000/{{ .Values.application.environments.development }}/{{ .Values.application.name }}-documentation:$(inputs.params.revision-name)" >> /tekton/results/image
          cat $(workspaces.source.path)/image-digest | tee /tekton/results/digest
        fi
        exit 0

  volumes:
    - name: varlibcontainers
      emptyDir: {}
    # - name: gen-source
    #   emptyDir: {}
