{{ template "doc.header" . }}

This Helm Chart is installing and configuring the Compliance operator, using the following workflow:

1. Create required Namespace
2. Installing the Compliance operator by applying the Subscription and OperatorGroup object. (In addition, the InstallPlan can be approved if required) 
3. Verifying if the operator is ready to use Install and configure the compliance operator. 
4. Apply a ScanSettingBinding and, optionally, a TailoredProfile.


{{ template "doc.deps" . }}

It is best used with a full GitOps approach such as Argo CD does. For example, https://github.com/tjungbauer/openshift-clusterconfig-gitops


{{ template "doc.maintainer_and_sources" . }}

## Parameters

:bulb: **TIP**: See README files of sub Charts for additional possible settings: [helper-operator](https://github.com/tjungbauer/helm-charts/tree/main/charts/helper-operator) and [helper-status-checker](https://github.com/tjungbauer/helm-charts/tree/main/charts/helper-operator).

{{ template "doc.values" . }}

## Example values

```yaml
---
# Install Operator Compliance Operator
# Deploys Operator --> Subscription and Operatorgroup
# Syncwave: 0
helper-operator:
  operators:
    compliance-operator:
      enabled: true
      syncwave: '0'
      namespace:
        name: openshift-compliance
        create: true
      subscription:
        channel: stable
        approval: Automatic
        operatorName: compliance-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace
      operatorgroup:
        create: true
        notownnamespace: true

helper-status-checker:
  enabled: true

  # use the value of the currentCSV (packagemanifest) but WITHOUT the version !!
  operatorName: compliance-operator

  # where operator is installed
  namespace:
    name: openshift-compliance

  serviceAccount:
    create: true
    name: "sa-compliance"

compliance:
  namespace:
    name: openshift-compliance
    syncwave: '0'
    descr: 'Red Hat Compliance'
  scansettingbinding:
    enabled: true
    syncwave: '3'

    # Example
    tailored:
      enabled: false
      modified_profiles:
      - name: tailoredprofile-ocp4-cis
        description: Modified ocp4-cis profile
        title: Tailored Profile of ocp4-cis
        extends: ocp4-cis
        disableRule:
        - name: ocp4-scc-limit-container-allowed-capabilities
          rationale: Disabling CIS-OCP 5.2.8 that will always be triggered as long nutanix-csi does not provide SCC configuration

    profiles:
      - name: ocp4-cis-node
        kind: Profile  # Could be Profile or TailedProfile
      - name: ocp4-cis
        kind: Profile
    scansetting: default

```

{{ template "doc.footer" . }}
